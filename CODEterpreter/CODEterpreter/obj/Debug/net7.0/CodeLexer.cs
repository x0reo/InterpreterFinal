//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\a\Desktop\Interpreter\CODEterpreter\CODEterpreter\InterpreterGrammar\Code.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace CODEterpreter.InterpreterGrammar {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class CodeLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, BEGIN=20, END=21, IF=22, ELSE=23, BEGINIF=24, ENDIF=25, 
		BEGINWHILE=26, ENDWHILE=27, DATATYPE=28, DOLLARSIGNCARRIAGE=29, ASSIGN=30, 
		COLON=31, BOOLEANLITERAL=32, INTEGERLITERAL=33, FLOATLITERAL=34, CHARLITERAL=35, 
		STRINGLITERAL=36, WS=37, NEWLINE=38, COLONFUNCTION=39, IDENTIFIER=40, 
		COMMENT=41;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "BEGIN", "END", "IF", "ELSE", "BEGINIF", "ENDIF", "BEGINWHILE", 
		"ENDWHILE", "DATATYPE", "DOLLARSIGNCARRIAGE", "ASSIGN", "COLON", "BOOLEANLITERAL", 
		"INTEGERLITERAL", "FLOATLITERAL", "CHARLITERAL", "STRINGLITERAL", "WS", 
		"NEWLINE", "COLONFUNCTION", "IDENTIFIER", "COMMENT"
	};


	public CodeLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'WHILE'", "','", "'+'", "'-'", "'NOT'", "'*'", "'/'", 
		"'%'", "'AND'", "'OR'", "'>'", "'<'", "'>='", "'<='", "'=='", "'<>'", 
		"'&'", "'BEGIN CODE'", "'END CODE'", "'IF'", "'ELSE'", "'BEGIN IF'", "'END IF'", 
		"'BEGIN WHILE'", "'END WHILE'", null, "'$'", "'='", "':'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, "BEGIN", "END", "IF", 
		"ELSE", "BEGINIF", "ENDIF", "BEGINWHILE", "ENDWHILE", "DATATYPE", "DOLLARSIGNCARRIAGE", 
		"ASSIGN", "COLON", "BOOLEANLITERAL", "INTEGERLITERAL", "FLOATLITERAL", 
		"CHARLITERAL", "STRINGLITERAL", "WS", "NEWLINE", "COLONFUNCTION", "IDENTIFIER", 
		"COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Code.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2+\x14F\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3"+
		"\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v"+
		"\x3\v\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10"+
		"\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13"+
		"\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15"+
		"\x3\x15\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16"+
		"\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18"+
		"\x3\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19"+
		"\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B"+
		"\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C"+
		"\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D"+
		"\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D"+
		"\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x5\x1D\xDB\n\x1D\x3\x1E\x3\x1E\x3"+
		"\x1F\x3\x1F\x3 \x3 \x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x5!\xEC\n!\x3"+
		"\"\x6\"\xEF\n\"\r\"\xE\"\xF0\x3#\x6#\xF4\n#\r#\xE#\xF5\x3#\x3#\x6#\xFA"+
		"\n#\r#\xE#\xFB\x3$\x3$\x3$\x3$\x3%\x3%\a%\x104\n%\f%\xE%\x107\v%\x3%\x3"+
		"%\x3%\a%\x10C\n%\f%\xE%\x10F\v%\x3%\x6%\x112\n%\r%\xE%\x113\x5%\x116\n"+
		"%\x3&\x6&\x119\n&\r&\xE&\x11A\x3&\x3&\x3\'\x6\'\x120\n\'\r\'\xE\'\x121"+
		"\x3(\x3(\x3(\x3(\x3(\x3(\x3(\x3(\x3(\x3(\x3(\x5(\x12F\n(\x3)\x3)\a)\x133"+
		"\n)\f)\xE)\x136\v)\x3)\x3)\a)\x13A\n)\f)\xE)\x13D\v)\x5)\x13F\n)\x3*\x3"+
		"*\a*\x143\n*\f*\xE*\x146\v*\x3*\a*\x149\n*\f*\xE*\x14C\v*\x3*\x3*\x2\x2"+
		"\x2+\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n"+
		"\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11"+
		"!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31"+
		"\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!"+
		"\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+\x3\x2\f"+
		"\x3\x2\x32;\x3\x2))\x3\x2$$\x3\x2__\x5\x2\v\v\xF\xF\"\"\x5\x2\f\f\xF\xF"+
		"~~\x4\x2\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x3\x2\x63|\x4\x2\f"+
		"\f\xF\xF\x161\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2"+
		"\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2"+
		"\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2"+
		"\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3"+
		"\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2"+
		"\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2"+
		"\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2"+
		"\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2"+
		"\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2"+
		"\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2"+
		"Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x3U\x3\x2\x2\x2\x5W\x3\x2\x2\x2\aY\x3\x2"+
		"\x2\x2\t_\x3\x2\x2\x2\v\x61\x3\x2\x2\x2\r\x63\x3\x2\x2\x2\xF\x65\x3\x2"+
		"\x2\x2\x11i\x3\x2\x2\x2\x13k\x3\x2\x2\x2\x15m\x3\x2\x2\x2\x17o\x3\x2\x2"+
		"\x2\x19s\x3\x2\x2\x2\x1Bv\x3\x2\x2\x2\x1Dx\x3\x2\x2\x2\x1Fz\x3\x2\x2\x2"+
		"!}\x3\x2\x2\x2#\x80\x3\x2\x2\x2%\x83\x3\x2\x2\x2\'\x86\x3\x2\x2\x2)\x88"+
		"\x3\x2\x2\x2+\x93\x3\x2\x2\x2-\x9C\x3\x2\x2\x2/\x9F\x3\x2\x2\x2\x31\xA4"+
		"\x3\x2\x2\x2\x33\xAD\x3\x2\x2\x2\x35\xB4\x3\x2\x2\x2\x37\xC0\x3\x2\x2"+
		"\x2\x39\xDA\x3\x2\x2\x2;\xDC\x3\x2\x2\x2=\xDE\x3\x2\x2\x2?\xE0\x3\x2\x2"+
		"\x2\x41\xEB\x3\x2\x2\x2\x43\xEE\x3\x2\x2\x2\x45\xF3\x3\x2\x2\x2G\xFD\x3"+
		"\x2\x2\x2I\x115\x3\x2\x2\x2K\x118\x3\x2\x2\x2M\x11F\x3\x2\x2\x2O\x12E"+
		"\x3\x2\x2\x2Q\x13E\x3\x2\x2\x2S\x140\x3\x2\x2\x2UV\a*\x2\x2V\x4\x3\x2"+
		"\x2\x2WX\a+\x2\x2X\x6\x3\x2\x2\x2YZ\aY\x2\x2Z[\aJ\x2\x2[\\\aK\x2\x2\\"+
		"]\aN\x2\x2]^\aG\x2\x2^\b\x3\x2\x2\x2_`\a.\x2\x2`\n\x3\x2\x2\x2\x61\x62"+
		"\a-\x2\x2\x62\f\x3\x2\x2\x2\x63\x64\a/\x2\x2\x64\xE\x3\x2\x2\x2\x65\x66"+
		"\aP\x2\x2\x66g\aQ\x2\x2gh\aV\x2\x2h\x10\x3\x2\x2\x2ij\a,\x2\x2j\x12\x3"+
		"\x2\x2\x2kl\a\x31\x2\x2l\x14\x3\x2\x2\x2mn\a\'\x2\x2n\x16\x3\x2\x2\x2"+
		"op\a\x43\x2\x2pq\aP\x2\x2qr\a\x46\x2\x2r\x18\x3\x2\x2\x2st\aQ\x2\x2tu"+
		"\aT\x2\x2u\x1A\x3\x2\x2\x2vw\a@\x2\x2w\x1C\x3\x2\x2\x2xy\a>\x2\x2y\x1E"+
		"\x3\x2\x2\x2z{\a@\x2\x2{|\a?\x2\x2| \x3\x2\x2\x2}~\a>\x2\x2~\x7F\a?\x2"+
		"\x2\x7F\"\x3\x2\x2\x2\x80\x81\a?\x2\x2\x81\x82\a?\x2\x2\x82$\x3\x2\x2"+
		"\x2\x83\x84\a>\x2\x2\x84\x85\a@\x2\x2\x85&\x3\x2\x2\x2\x86\x87\a(\x2\x2"+
		"\x87(\x3\x2\x2\x2\x88\x89\a\x44\x2\x2\x89\x8A\aG\x2\x2\x8A\x8B\aI\x2\x2"+
		"\x8B\x8C\aK\x2\x2\x8C\x8D\aP\x2\x2\x8D\x8E\a\"\x2\x2\x8E\x8F\a\x45\x2"+
		"\x2\x8F\x90\aQ\x2\x2\x90\x91\a\x46\x2\x2\x91\x92\aG\x2\x2\x92*\x3\x2\x2"+
		"\x2\x93\x94\aG\x2\x2\x94\x95\aP\x2\x2\x95\x96\a\x46\x2\x2\x96\x97\a\""+
		"\x2\x2\x97\x98\a\x45\x2\x2\x98\x99\aQ\x2\x2\x99\x9A\a\x46\x2\x2\x9A\x9B"+
		"\aG\x2\x2\x9B,\x3\x2\x2\x2\x9C\x9D\aK\x2\x2\x9D\x9E\aH\x2\x2\x9E.\x3\x2"+
		"\x2\x2\x9F\xA0\aG\x2\x2\xA0\xA1\aN\x2\x2\xA1\xA2\aU\x2\x2\xA2\xA3\aG\x2"+
		"\x2\xA3\x30\x3\x2\x2\x2\xA4\xA5\a\x44\x2\x2\xA5\xA6\aG\x2\x2\xA6\xA7\a"+
		"I\x2\x2\xA7\xA8\aK\x2\x2\xA8\xA9\aP\x2\x2\xA9\xAA\a\"\x2\x2\xAA\xAB\a"+
		"K\x2\x2\xAB\xAC\aH\x2\x2\xAC\x32\x3\x2\x2\x2\xAD\xAE\aG\x2\x2\xAE\xAF"+
		"\aP\x2\x2\xAF\xB0\a\x46\x2\x2\xB0\xB1\a\"\x2\x2\xB1\xB2\aK\x2\x2\xB2\xB3"+
		"\aH\x2\x2\xB3\x34\x3\x2\x2\x2\xB4\xB5\a\x44\x2\x2\xB5\xB6\aG\x2\x2\xB6"+
		"\xB7\aI\x2\x2\xB7\xB8\aK\x2\x2\xB8\xB9\aP\x2\x2\xB9\xBA\a\"\x2\x2\xBA"+
		"\xBB\aY\x2\x2\xBB\xBC\aJ\x2\x2\xBC\xBD\aK\x2\x2\xBD\xBE\aN\x2\x2\xBE\xBF"+
		"\aG\x2\x2\xBF\x36\x3\x2\x2\x2\xC0\xC1\aG\x2\x2\xC1\xC2\aP\x2\x2\xC2\xC3"+
		"\a\x46\x2\x2\xC3\xC4\a\"\x2\x2\xC4\xC5\aY\x2\x2\xC5\xC6\aJ\x2\x2\xC6\xC7"+
		"\aK\x2\x2\xC7\xC8\aN\x2\x2\xC8\xC9\aG\x2\x2\xC9\x38\x3\x2\x2\x2\xCA\xCB"+
		"\a\x44\x2\x2\xCB\xCC\aQ\x2\x2\xCC\xCD\aQ\x2\x2\xCD\xDB\aN\x2\x2\xCE\xCF"+
		"\a\x45\x2\x2\xCF\xD0\aJ\x2\x2\xD0\xD1\a\x43\x2\x2\xD1\xDB\aT\x2\x2\xD2"+
		"\xD3\aK\x2\x2\xD3\xD4\aP\x2\x2\xD4\xDB\aV\x2\x2\xD5\xD6\aH\x2\x2\xD6\xD7"+
		"\aN\x2\x2\xD7\xD8\aQ\x2\x2\xD8\xD9\a\x43\x2\x2\xD9\xDB\aV\x2\x2\xDA\xCA"+
		"\x3\x2\x2\x2\xDA\xCE\x3\x2\x2\x2\xDA\xD2\x3\x2\x2\x2\xDA\xD5\x3\x2\x2"+
		"\x2\xDB:\x3\x2\x2\x2\xDC\xDD\a&\x2\x2\xDD<\x3\x2\x2\x2\xDE\xDF\a?\x2\x2"+
		"\xDF>\x3\x2\x2\x2\xE0\xE1\a<\x2\x2\xE1@\x3\x2\x2\x2\xE2\xE3\aV\x2\x2\xE3"+
		"\xE4\aT\x2\x2\xE4\xE5\aW\x2\x2\xE5\xEC\aG\x2\x2\xE6\xE7\aH\x2\x2\xE7\xE8"+
		"\a\x43\x2\x2\xE8\xE9\aN\x2\x2\xE9\xEA\aU\x2\x2\xEA\xEC\aG\x2\x2\xEB\xE2"+
		"\x3\x2\x2\x2\xEB\xE6\x3\x2\x2\x2\xEC\x42\x3\x2\x2\x2\xED\xEF\t\x2\x2\x2"+
		"\xEE\xED\x3\x2\x2\x2\xEF\xF0\x3\x2\x2\x2\xF0\xEE\x3\x2\x2\x2\xF0\xF1\x3"+
		"\x2\x2\x2\xF1\x44\x3\x2\x2\x2\xF2\xF4\t\x2\x2\x2\xF3\xF2\x3\x2\x2\x2\xF4"+
		"\xF5\x3\x2\x2\x2\xF5\xF3\x3\x2\x2\x2\xF5\xF6\x3\x2\x2\x2\xF6\xF7\x3\x2"+
		"\x2\x2\xF7\xF9\a\x30\x2\x2\xF8\xFA\t\x2\x2\x2\xF9\xF8\x3\x2\x2\x2\xFA"+
		"\xFB\x3\x2\x2\x2\xFB\xF9\x3\x2\x2\x2\xFB\xFC\x3\x2\x2\x2\xFC\x46\x3\x2"+
		"\x2\x2\xFD\xFE\a)\x2\x2\xFE\xFF\n\x3\x2\x2\xFF\x100\a)\x2\x2\x100H\x3"+
		"\x2\x2\x2\x101\x105\a$\x2\x2\x102\x104\n\x4\x2\x2\x103\x102\x3\x2\x2\x2"+
		"\x104\x107\x3\x2\x2\x2\x105\x103\x3\x2\x2\x2\x105\x106\x3\x2\x2\x2\x106"+
		"\x108\x3\x2\x2\x2\x107\x105\x3\x2\x2\x2\x108\x116\a$\x2\x2\x109\x10D\a"+
		"]\x2\x2\x10A\x10C\n\x5\x2\x2\x10B\x10A\x3\x2\x2\x2\x10C\x10F\x3\x2\x2"+
		"\x2\x10D\x10B\x3\x2\x2\x2\x10D\x10E\x3\x2\x2\x2\x10E\x111\x3\x2\x2\x2"+
		"\x10F\x10D\x3\x2\x2\x2\x110\x112\a_\x2\x2\x111\x110\x3\x2\x2\x2\x112\x113"+
		"\x3\x2\x2\x2\x113\x111\x3\x2\x2\x2\x113\x114\x3\x2\x2\x2\x114\x116\x3"+
		"\x2\x2\x2\x115\x101\x3\x2\x2\x2\x115\x109\x3\x2\x2\x2\x116J\x3\x2\x2\x2"+
		"\x117\x119\t\x6\x2\x2\x118\x117\x3\x2\x2\x2\x119\x11A\x3\x2\x2\x2\x11A"+
		"\x118\x3\x2\x2\x2\x11A\x11B\x3\x2\x2\x2\x11B\x11C\x3\x2\x2\x2\x11C\x11D"+
		"\b&\x2\x2\x11DL\x3\x2\x2\x2\x11E\x120\t\a\x2\x2\x11F\x11E\x3\x2\x2\x2"+
		"\x120\x121\x3\x2\x2\x2\x121\x11F\x3\x2\x2\x2\x121\x122\x3\x2\x2\x2\x122"+
		"N\x3\x2\x2\x2\x123\x124\a\x46\x2\x2\x124\x125\aK\x2\x2\x125\x126\aU\x2"+
		"\x2\x126\x127\aR\x2\x2\x127\x128\aN\x2\x2\x128\x129\a\x43\x2\x2\x129\x12F"+
		"\a[\x2\x2\x12A\x12B\aU\x2\x2\x12B\x12C\a\x45\x2\x2\x12C\x12D\a\x43\x2"+
		"\x2\x12D\x12F\aP\x2\x2\x12E\x123\x3\x2\x2\x2\x12E\x12A\x3\x2\x2\x2\x12F"+
		"P\x3\x2\x2\x2\x130\x134\t\b\x2\x2\x131\x133\t\t\x2\x2\x132\x131\x3\x2"+
		"\x2\x2\x133\x136\x3\x2\x2\x2\x134\x132\x3\x2\x2\x2\x134\x135\x3\x2\x2"+
		"\x2\x135\x13F\x3\x2\x2\x2\x136\x134\x3\x2\x2\x2\x137\x13B\t\n\x2\x2\x138"+
		"\x13A\t\t\x2\x2\x139\x138\x3\x2\x2\x2\x13A\x13D\x3\x2\x2\x2\x13B\x139"+
		"\x3\x2\x2\x2\x13B\x13C\x3\x2\x2\x2\x13C\x13F\x3\x2\x2\x2\x13D\x13B\x3"+
		"\x2\x2\x2\x13E\x130\x3\x2\x2\x2\x13E\x137\x3\x2\x2\x2\x13FR\x3\x2\x2\x2"+
		"\x140\x144\a%\x2\x2\x141\x143\n\v\x2\x2\x142\x141\x3\x2\x2\x2\x143\x146"+
		"\x3\x2\x2\x2\x144\x142\x3\x2\x2\x2\x144\x145\x3\x2\x2\x2\x145\x14A\x3"+
		"\x2\x2\x2\x146\x144\x3\x2\x2\x2\x147\x149\t\a\x2\x2\x148\x147\x3\x2\x2"+
		"\x2\x149\x14C\x3\x2\x2\x2\x14A\x148\x3\x2\x2\x2\x14A\x14B\x3\x2\x2\x2"+
		"\x14B\x14D\x3\x2\x2\x2\x14C\x14A\x3\x2\x2\x2\x14D\x14E\b*\x2\x2\x14ET"+
		"\x3\x2\x2\x2\x14\x2\xDA\xEB\xF0\xF5\xFB\x105\x10D\x113\x115\x11A\x121"+
		"\x12E\x134\x13B\x13E\x144\x14A\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace CODEterpreter.InterpreterGrammar
